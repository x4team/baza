---
- block:
  - name: Add prometheus user
    user:
      name: prometheus
      shell: /bin/nologin
      create_home: no
      system: yes

  - name: Create prometheus directory
    file:
      path: /opt/prometheus
      state: directory
      owner: prometheus
      group: prometheus
      mode: 0755

  - name: Download prometheus
    get_url:
      url: "{{ download_link }}"
      dest: /tmp/prometheus.tar.gz
      checksum: "{{ download_checksum }}"
      mode: 0440
    register: result
    until: result is succeeded
    retries: 5
    delay: 3

  - name: Extract prometheus
    unarchive:
      src: /tmp/prometheus.tar.gz
      dest: /opt/prometheus
      owner: prometheus
      group: prometheus
      mode: 0755
      remote_src: yes
      extra_opts: [--strip-components=1]
    notify: restart prometheus

  - name: Copy prometheus server configuration file
    template:
      src: prometheus.yml.j2
      dest: /opt/prometheus/prometheus.yml
      owner: prometheus
      group: prometheus
      mode: 0644
    notify: restart prometheus

  - name: Copy prometheus alerting rules
    copy:
      src: "{{ item }}"
      dest: "/opt/prometheus/{{ item }}"
      owner: prometheus
      group: prometheus
      mode: 0644
    loop:
      - node_exporter.yaml
      - compliance-service.yaml
      - blackbox_exporter.yaml
    notify: restart prometheus

  - name: Copy prometheus unit file
    template:
      src: prometheus.service.j2
      dest: /etc/systemd/system/prometheus.service
      owner: root
      group: root
      mode: 0644
    notify: reload systemd

  - name: Enable and start prometheus service
    systemd:
      name: prometheus
      enabled: yes
      state: started

  - name: Check if nginx config file exists
    stat:
      path: "{{ nginx_conf_file }}"
    register: monitoring_config

  - block: 
    - name: Copy nginx config file
      template:
        src: nginx.conf.j2
        dest: "{{ nginx_conf_file }}"
        owner: root
        group: root
        mode: 0644
      notify: reload nginx

    - name: Create symbolic link 
      file:
        src: "{{ nginx_conf_file }}"
        dest: /etc/nginx/sites-enabled/monitoring
        state: link
      notify: reload nginx
    when: not monitoring_config.stat.exists

  - name: Insert/Update nginx location block
    blockinfile:
      path: "{{ nginx_conf_file }}"
      marker_begin: "BEGIN PROMETHEUS"
      marker_end: "END PROMETHEUS"
      insertbefore: "^}$"
      block: |
        location /prometheus/ {
          proxy_pass http://localhost:9090/prometheus/;
        }
    notify: reload nginx
      
  when: 
    - ansible_facts['architecture'] == 'x86_64'
    - ansible_facts['distribution'] == 'Ubuntu'
  become: yes
...
